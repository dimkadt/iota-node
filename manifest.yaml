type: install
version: 1.4

id: iota
name: IOTA Node
baseUrl: https://raw.githubusercontent.com/jelastic-jps/iota-node/main
logo: images/iota-logo.svg?sanitize=true

homepage: https://www.iota.org/
description:
  short: IOTA’s Tangle is an open, feeless and scalable distributed ledger.
  text: |
    IOTA’s Tangle is an open, feeless and scalable distributed ledger, designed to support frictionless data and value transfer.

globals:
  user: admin
  password: ${fn.password}
  salt: setcretsalt

nodes:
- cloudlets: 16
  nodeGroup: cp
  extip: true
  nodeType: dockerengine

onInstall:
  - setupNode

actions:
  setupNode:
    - cmd [cp]: |-
        git clone https://github.com/gohornet/hornet
        yum install -y jq
        cd hornet
        password=$(python -c "import crypt, getpass, pwd; print crypt.crypt('${globals.password}', '\$6\$' + '${globals.salt}' + '\$')")
        [ -z $password ] && { echo "Could not generate hash" ;exit 1; };
        jq --arg PASSWORD "${password}" '.dashboard.basicAuth.enabled = true | .dashboard.basicAuth.username = "${globals.user}" | .dashboard.basicAuth.passwordHash = $PASSWORD | .dashboard.basicAuth.passwordSalt = "${globals.salt}"'   config.json > config.json.modifed
        [ -f "config.json.modifed" ] && mv config.json.modifed config.json
        mkdir -p mainnetdb snapshots/{mainnet,devnet,comnet}
        chown 39999:39999 -R snapshots mainnetdb
        sed -i '/network_mode/a \   \ restart: always' docker-compose.yml
        sed -i 's/localhost:8081/${nodes.cp.extips}:8081/g' config.json
        iptables -P INPUT ACCEPT
        iptables -F 
        iptables -t nat -I PREROUTING -p tcp -m tcp --dport 80 -m comment --comment "IOTA Node" -j REDIRECT --to-ports 8081
        service iptables save
        echo "Km5hdAo6UFJFUk9VVElORyBBQ0NFUFQgWzA6MF0KOlBPU1RST1VUSU5HIEFDQ0VQVCBbMDowXQo6T1VUUFVUIEFDQ0VQVCBbMDowXQotQSBQUkVST1VUSU5HIC1wIHRjcCAtbSB0Y3AgLS1kcG9ydCA4MCAtbSBjb21tZW50IC0tY29tbWVudCAiSU9UQSBOb2RlIiAtaiBSRURJUkVDVCAtLXRvLXBvcnRzIDgwODEKQ09NTUlUCg==" | base64 -d  > /etc/sysconfig/iptables-custom
        docker run -d --restart=always -v $(pwd)/config.json:/app/config.json:ro -v $(pwd)/peering.json:/app/peering.json -v $(pwd)/mainnetdb:/app/mainnetdb --name hornet --net=host gohornet/hornet:latest
        echo "Downloading data: "
        while true; do
            netstat -nlpt | grep -q 8081
            [ $? -eq 0 ] && break
            echo  -n "."
            sleep 1
        done
      user: root
 
  success: |
      The Node is installed and available here **[{{URI}}/dashboard]({{URI}}/dashboard)**.
      **User**: ${globals.user}  
      **Password**: ${globals.password} 

